name: Create and publish a bot Docker image

on:
  push:
    branches: ['master']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      - name: Run docker slim
        uses: kitabisa/docker-slim-action@v1
        env:
          DSLIM_HTTP_PROBE: false
          DSLIM_CONTINUE_AFTER: 10
          DSLIM_RC_ENTRYPOINT: "python -m unittest discover tests && timeout 10 python bot.py || exit 0"
          DSLIM_INCLUDE_PATH: "/usr/local/lib/python3.12/multiprocessing/"
          DSLIM_RC_ENV: DISCORD_BOT_TOKEN=${{ secrets.BOT_TEST_TOKEN }}
        with:
          target: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          tag: "slim"
          overwrite: true
      - run: docker image push "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"  
